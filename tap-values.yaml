#@ load("@ytt:data", "data")
---
shared:
  ingress_domain: #@ data.values.ingress.domain

  image_registry:
    project_path: #@ "{}/tap".format(data.values.container_registry.hostname)
    username: #@ data.values.container_registry.username
    password: #@ data.values.container_registry.password

  kubernetes_version: "1.23"

  # ca_cert_data: | # To be passed if using custom certificates.
  #     -----BEGIN CERTIFICATE-----
  #     MIIFXzCCA0egAwIBAgIJAJYm37SFocjlMA0GCSqGSIb3DQEBDQUAMEY...
  #     -----END CERTIFICATE-----

ceip_policy_disclosed: true # Installation fails if this is not set to true. Not a string.

#The above keys are minimum numbers of entries needed in tap-values.yaml to get a functioning TAP Full profile installation.

#Below are the keys which may have default values set, but can be overridden.

profile: full # Can take iterate, build, run, view.

supply_chain: basic # Can take testing, testing_scanning.

ootb_supply_chain_testing_scanning: # Based on supply_chain set above, can be changed to ootb_supply_chain_testing, ootb_supply_chain_testing_scanning.
  registry:
    server: #@ data.values.container_registry.hostname
    repository: "apps"
  gitops:
    ssh_secret: ""

ootb_supply_chain_basic: # Based on supply_chain set above, can be changed to ootb_supply_chain_testing, ootb_supply_chain_testing_scanning.
  registry:
    server: #@ data.values.container_registry.hostname
    repository: "apps"
  gitops:
    ssh_secret: ""

contour:
  envoy:
    service:
      annotations:      
        external-dns.alpha.kubernetes.io/hostname: #@ "*.{}".format(data.values.ingress.domain)
      type: LoadBalancer

buildservice:
  kp_default_repository: #@ "{}/tap/build-service".format(data.values.container_registry.hostname)
  kp_default_repository_username: #@ data.values.container_registry.username
  kp_default_repository_password: #@ data.values.container_registry.password
  exclude_dependencies: true

tap_gui:
  ingressEnabled: true
  ingressDomain: #@ data.values.ingress.domain
  service_type: ClusterIP # NodePort for distributions that don't support LoadBalancer

  tls:
    secretName: #@ data.values.ingress.contour_tls_secret
    namespace: #@ data.values.ingress.contour_tls_namespace
  app_config:
    organization:
      name: odedia
    app:
      title: Odedia's portal
      baseUrl: #@ "https://tap-gui.{}".format(data.values.ingress.domain)
    integrations:
      github:
      - host: github.com
        token: #@ "{}".format(data.values.backstage.github_token)
    catalog:
      locations:
        - type: url
          target: https://github.com/odedia/backstage/blob/main/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/yelb/blob/main/catalog-info.yaml
    backend:
      baseUrl: #@ "https://tap-gui.{}".format(data.values.ingress.domain)
      cors:
        origin: #@ "https://tap-gui.{}".format(data.values.ingress.domain)
    auth:
      allowGuestAccess: true
      environment: development
      session:
        secret: odedias
      providers:
        oidc:
          development:
            metadataUrl: #@ "{}".format(data.values.backstage.openid.url)
            clientId: #@ "{}".format(data.values.backstage.openid.client_id)
            clientSecret: #@ "{}".format(data.values.backstage.openid.client_secret)
    techdocs:
      builder: 'external'
      generator:
        runIn: 'docker'
      publisher:
        type: 'awsS3'
        awsS3:
          bucketName: #@ "{}".format(data.values.backstage.s3.bucket)
          credentials:
            accessKeyId: #@ "{}".format(data.values.aws.region)
            secretAccessKey: #@ "{}".format(data.values.backstage.s3.accessKey)
          region: #@ "{}".format(data.values.backstage.s3.secretKey)
          s3ForcePathStyle: false

metadata_store:
  ns_for_export_app_cert: #@ data.values.developer_namespace
  app_service_type: ClusterIP # Defaults to LoadBalancer. If shared.ingress_domain is set earlier, this must be set to ClusterIP.

scanning:
  metadataStore:
    url: "" # Configuration is moved, so set this string to empty.

grype:
  namespace: #@ data.values.developer_namespace
  targetImagePullSecret: registry-credentials

policy:
  tuf_enabled: false # By default, TUF initialization and keyless verification are deactivated.

cnrs:
  domain_name: #@ "apps.{}".format(data.values.ingress.domain)
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
  default_tls_secret: #@ "{}/cnr-{}".format(data.values.ingress.contour_tls_namespace,data.values.ingress.contour_tls_secret)


excluded_packages:
  - learningcenter.tanzu.vmware.com
  - workshops.learningcenter.tanzu.vmware.com
  - grype.scanning.apps.tanzu.vmware.com
tap_telemetry:
  installed_for_vmware_internal_use: "true"
