#@ load("@ytt:data", "data")
---
profile: full
ceip_policy_disclosed: true # Installation fails if this is set to 'false'
buildservice:
  kp_default_repository: #@ "{}/tap/build-service".format(data.values.container_registry.hostname)
  kp_default_repository_username: #@ data.values.container_registry.username
  kp_default_repository_password: #@ data.values.container_registry.password
  tanzunet_username: #@ data.values.tanzunet.username
  tanzunet_password: #@ data.values.tanzunet.password
  enable_automatic_dependency_updates: true
  descriptor_name: tap-1.0.0-full

supply_chain: testing_scanning

ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.container_registry.hostname
    repository: "apps"
  gitops:
    ssh_secret: ""

ootb_supply_chain_basic:
  registry:
    server: #@ data.values.container_registry.hostname
    repository: "apps"
  gitops:
    ssh_secret: ""

learningcenter:
  ingressDomain: #@ "workshops.{}".format(data.values.ingress.domain)
  ingressSecret:
    secretName: #@ "learning-center-{}".format(data.values.ingress.contour_tls_secret)

tap_gui:
  ingressEnabled: true
  ingressDomain: #@ data.values.ingress.domain
  service_type: ClusterIP # NodePort for distributions that don't support LoadBalancer

  tls:
    secretName: #@ data.values.ingress.contour_tls_secret
    namespace: #@ data.values.ingress.contour_tls_namespace
  app_config:
    organization:
      name: odedia
    app:
      title: Odedia's portal
      baseUrl: #@ "https://portal.{}".format(data.values.ingress.domain)
    integrations:
      github:
      - host: github.com
        token: #@ "{}".format(data.values.backstage.github_token)
    catalog:
      locations:
        - type: url
          target: https://github.com/odedia/backstage/blob/main/catalog-info.yaml
        - type: url
          target: https://github.com/odedia/yelb/blob/main/catalog-info.yaml
    backend:
      baseUrl: #@ "https://portal.{}".format(data.values.ingress.domain)
      cors:
        origin: #@ "https://portal.{}".format(data.values.ingress.domain)
    auth:
      allowGuestAccess: true
      environment: development
      session:
        secret: odedias
      providers:
        oidc:
          development:
            metadataUrl: #@ "{}".format(data.values.backstage.openid.url)
            clientId: #@ "{}".format(data.values.backstage.openid.client_id)
            clientSecret: #@ "{}".format(data.values.backstage.openid.client_secret)
    techdocs:
      builder: 'external'
      generator:
        runIn: 'docker'
      publisher:
        type: 'awsS3'
        awsS3:
          bucketName: #@ "{}".format(data.values.backstage.s3.bucket)
          credentials:
            accessKeyId: #@ "{}".format(data.values.aws.region)
            secretAccessKey: #@ "{}".format(data.values.backstage.s3.accessKey)
          region: #@ "{}".format(data.values.backstage.s3.secretKey)
          s3ForcePathStyle: false

metadata_store:
  app_service_type: ClusterIP # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don't support LoadBalancer

contour:
  envoy:
    service:
      annotations:      
        external-dns.alpha.kubernetes.io/hostname: #@ "*.{}".format(data.values.ingress.domain)
      type: LoadBalancer

accelerator: 
  domain: #@ "{}".format(data.values.ingress.domain)                         
  ingress:
    include: true
  tls:
    secretName: #@ data.values.ingress.contour_tls_secret                                                 
    namespace: #@ data.values.ingress.contour_tls_namespace
  server:
    service_type: ClusterIP

cnrs:
  domain_name: #@ "apps.{}".format(data.values.ingress.domain)
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
  default_tls_secret: #@ "{}/cnr-{}".format(data.values.ingress.contour_tls_namespace,data.values.ingress.contour_tls_secret)

grype:
  namespace: #@ data.values.developer_namespace
  targetImagePullSecret: registry-credentials

# excluded_packages:
#  - accelerator.apps.tanzu.vmware.com
#  - api-portal.tanzu.vmware.com
#  - build.appliveview.tanzu.vmware.com
#  - buildservice.tanzu.vmware.com
#  - controller.conventions.apps.tanzu.vmware.com
#  - developer-conventions.tanzu.vmware.com
#  - grype.scanning.apps.tanzu.vmware.com
#  - learningcenter.tanzu.vmware.com
#  - metadata-store.apps.tanzu.vmware.com
#  - ootb-supply-chain-basic.tanzu.vmware.com
#  - ootb-supply-chain-testing.tanzu.vmware.com
#  - ootb-supply-chain-testing-scanning.tanzu.vmware.com
#  - ootb-delivery-basic.tanzu.vmware.com
#  - scanning.apps.tanzu.vmware.com
#  - spring-boot-conventions.tanzu.vmware.com
#  - workshops.learningcenter.tanzu.vmware.com
#  - cnrs.tanzu.vmware.com
#  - image-policy-webhook.signing.apps.tanzu.vmware.com
#  - cartographer.tanzu.vmware.com
#  - tekton.tanzu.vmware.com
#  - ootb-templates.tanzu.vmware.com
#  - services-toolkit.tanzu.vmware.com
#  - service-bindings.labs.vmware.com

